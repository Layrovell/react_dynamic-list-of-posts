{"version":3,"sources":["components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/Loader/Loader.jsx","api/api.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","selectPost","selectedPostId","className","map","post","key","id","userId","title","onClick","type","NewCommentForm","getNewComment","loadData","useState","name","email","body","newComment","setNewComment","handleChange","e","target","value","onSubmit","preventDefault","onChange","placeholder","required","Loader","BASE_URL","request","url","fetch","then","response","json","result","data","PostDetails","commentsList","setCommentsList","showComments","setShowComments","prevPostId","usePrevious","loadComments","postId","filter","comment","comments","useEffect","length","com","commentId","method","headers","JSON","stringify","addPostComment","App","setPosts","setPostId","selectOption","setSelectOption","filtered","setFiltered","users","setUsers","console","log","filteredPosts","Number","user","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.758d43a7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './PostsList.scss';\n// import { PostItem } from './PostItem/PostItem';\n\nexport const PostsList = ({ posts, selectPost, selectedPostId }) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li key={post.id} className=\"PostsList__item\">\n            <div>\n              <b>[User # {post.userId}]:</b>\n              {post.title}\n            </div>\n            {selectedPostId === post.id ? (\n              <button\n                onClick={() => {\n                  selectPost(0);\n                }}\n                type=\"button\"\n                className=\"PostsList__button button\"\n              >\n                Close\n\n              </button>\n            ) : (\n              <button\n                onClick={() => {\n                  selectPost(post.id);\n                }}\n                type=\"button\"\n                className=\"PostsList__button button\"\n              >\n                Open\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ getNewComment, loadData }) => {\n  const [newComment, setNewComment] = useState({\n    name: '', email: '', body: '',\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setNewComment({\n      ...newComment,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    getNewComment(newComment);\n    setNewComment({\n      name: '',\n      email: '',\n      body: '',\n    });\n\n    loadData();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"NewCommentForm\">\n      <div className=\"form-field\">\n        <input\n          value={newComment.name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          value={newComment.email}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          value={newComment.body}\n          onChange={handleChange}\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          required\n        />\n      </div>\n\n      <button type=\"submit\" className=\"NewCommentForm__submit-button button\">\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  getNewComment: PropTypes.func.isRequired,\n  loadData: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable */\nconst BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const getPosts = () => request('/posts');\nexport const getUsers = () => request('/users');\n\nexport const getComments = postId => request('/comments')\n  .then(response => response.filter(comment => (\n    comment.postId === postId\n  )));\n\n// export const getUserPosts = postId => request(`/users/${postId}/todos`);\n\nexport const addPostComment = (newComment, postId) => {\n  fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      ...newComment,\n    }),\n  })\n}\n\nexport const deletePostComment = commentId => (\n  fetch(`${BASE_URL}/comments/${commentId}`, { method: 'DELETE' })\n);\n","/* eslint-disable */\nimport React, { useState, useEffect } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { Loader } from '../Loader/Loader';\nimport { getComments, deletePostComment, addPostComment } from '../../api/api';\nimport { usePrevious } from 'react-hanger';\n\nexport const PostDetails = ({ post }) => {\n  const [commentsList, setCommentsList] = useState([]);\n  const [showComments, setShowComments] = useState(true);\n  const prevPostId = usePrevious(post.id);\n\n  const loadComments = () => {\n    getComments(post.id)\n      .then(comments => { setCommentsList(comments) });\n  }\n\n  useEffect(() => {\n    loadComments();\n  }, [post.id]);\n\n  useEffect(() => {\n    if (prevPostId !== post.id) {\n      loadComments();\n    }\n  })\n\n  const getNewComment = (newComment) => {\n    addPostComment(newComment, post.id)\n    loadComments();\n  };\n\n  const hide = () => {\n    setShowComments(false);\n  };\n\n  const show = () => {\n    setShowComments(true);\n  };\n\n  return (\n    <>\n      {!post ? (\n        <Loader />\n      ) : (\n        <div className=\"PostDetails\">\n          <h2>Post details:</h2>\n\n          <section className=\"PostDetails__post\">\n            <p>{post.title}</p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            {showComments ? (\n              <button\n                onClick={hide}\n                type=\"button\" className=\"button\">Hide {commentsList.length} comments\n              </button>\n            ) : (\n              <button\n                onClick={show}\n                type=\"button\" className=\"button\">Show {commentsList.length} comments\n              </button>\n            )}\n            {showComments ? (\n              <ul className=\"PostDetails__list\">\n                {commentsList.map(com => (\n                  <li className=\"PostDetails__list-item\" key={com.id}>\n                    <button\n                      onClick={() => {\n                        deletePostComment(com.id)\n                          .then(loadComments)\n                      }}\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                    >\n                      X\n                    </button>\n                      <p>{com.body}</p>\n                  </li>\n                ))}\n              </ul>\n            ) : ''}\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm\n                getNewComment={getNewComment}\n                loadData={loadComments}\n              />\n            </div>\n          </section>\n        </div>\n      )}\n    </>\n  );\n};\n","/* eslint-disable */\nimport React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPosts, getUsers } from './api/api';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [postId, setPostId] = useState(0);\n  const [selectOption, setSelectOption] = useState('0');\n  const [filtered, setFiltered] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  console.log(users)\n\n  useEffect(() => {\n    getPosts()\n      .then(posts => {\n        setPosts(posts);\n      });\n  }, []);\n\n  useEffect(() => {\n    getUsers()\n      .then(users => setUsers(users));\n  }, []);\n\n  useEffect(() => {\n    const filteredPosts = posts.filter(post => (\n      post.userId === Number(selectOption)\n    ));\n    setFiltered(filteredPosts);\n\n  }, [selectOption]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n          <select\n            value={selectOption}\n            onChange={(e) => setSelectOption(e.target.value)}\n            className=\"App__user-selector\"\n          >\n            <option value=\"0\">All users</option>\n            {users.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n\n          <PostsList\n            posts={filtered.length > 0 ? filtered : posts}\n            selectedPostId={postId}\n            selectPost={(postId) => setPostId(postId)}\n          />\n        </div>\n\n        {postId !== 0 && (\n          <div className=\"App__content\">\n            <PostDetails\n              post={posts.find(post => post.id === postId)}\n            />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}